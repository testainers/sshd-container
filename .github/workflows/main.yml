name: CI Build

on:
  push:
    branches: [ main ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Get Version
        run: |
          VERSION=$(grep 'version:' version.yaml | cut -c 10-)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "REPO=$GITHUB_REPOSITORY" >> $GITHUB_ENV
          echo "OWNER=$GITHUB_REPOSITORY_OWNER" >> $GITHUB_ENV

      - name: Check if version is used
        run: |
          URL=$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/latest
          LATEST=$(curl --silent "$URL" | jq -r .name)
          if [ "$LATEST" == "$VERSION" ]; then
            echo "Version already used: v$VERSION"
            exit 1
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.OWNER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Build & Push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          file: Dockerfile
          tags: |
            ${{ env.REPO }}:${{ env.VERSION }}
            ${{ env.REPO }}:latest

      - name: Creating GitHub Tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ env.VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
